#					-*-org-*-

* v1.0.0
** v0.1.0
*** v0.0.2
**** Maybe skin handling
#+BEGIN_EXAMPLE
# INHERITS : Skin files with extension will not be read (let us create 
# 'default_pairs.inc' which is not a complete skin

# SCREEN_SIZE : by indication the columns and lines number, we can
# stretch widget position and size if real screen is larger

# COMMAND_LINE_ARGS :
# --list-skins : List of all no-extension files
# --test-skin : Only create screen to test the position of widgets


<Colors>
    red = 200, 250, 254 # Values from 0 to 254
</Colors>

<color_pairs>
    1 = red, black
</color_pairs>

<Skin Default> # skin name
    size       = 80x40
    color_pair = 4
    inherits   = <script_name>
</Skin>

<Widget lab_appname>
    position = 3,8
    size = 36x4
    text ="aze"
#    border = box|hline|vline, x,y,w,h, color_pair
    border = hline, 0, 2, 8, 1, 4
</Widget>
#+END_EXAMPLE

**** Handle distant files
To speed up backup and avoid distant `scp` each week (and to avoid error when host is unreachable), we can call from a cron.hourly job :
- [ ] backup_prog --hourly
  - try a `host` command to know if host is reachable
  - retrieve the file if reachable
  - No error if unreachable (log in /var/log/backup_prog.hourly)
  - broadcast message if retrieve is success

#+BEGIN_EXAMPLE
#  using Config::General
<get name>
   ssh_key     = /path/to/ssh
   local_dir   = pth/to/place/distant/dir
   distant_dir = /where/to/get/it
   user_name   = login to host with name :
   host        = hostname to connect to
</get>

keep_n_files <name>{
   base_dir      = /path/to/getted/files
   file_pattern  = *.tar.bz2
   keep_n_number = 3  // We will keep only 3 files
}

extern_tool <name>{               // 0 to n blocks
   path         = "/usr/bin/aze"
   cmd_arg      = "-q hhhhh"
   report       = yes
   latex_string = "azeaze %s azeaz" // %s is the result returned by the tool 
}

# REPORT :Individual report for each get_distant.d file
# makefile rule make pdf from tex
# Content :
# - Date/time of file
# - md5dum + check result
# - backup file weight
# - ignored files + file weight and type (with file) + user
# - Treat sub-archive (see redmine one)
<report NAME>
	title = "kjh"
	type = text|pdf|html	
	file = filename
	mail = aze@mlkdfsdf.com
</report>
#+END_EXAMPLE
**** May use external tools on generated archives
- [ ] For example =clamscan=
**** Full logfile handling
- We search in the following config files :
   backup_prog.rc, backup_prog.hourly.rc, backup_prog.weekly.rc
   backup_prog.daily.rc, backup_prog.complete.rc
   or any file found in ~/.backup_prog/ directory ?
- Anf there, in the format of an apache init file   
<Hourly||Daily||Weekly||Complete Logger>
file      = /var/log/backup_prog.hourly
    level     = warn
    ident_len = 40
    mode      = append
</Hourly or any other opened markup>
**** Make and improve translation
:LOGBOOK:
CLOCK: [2022-07-14 jeu. 03:33]--[2022-07-14 jeu. 03:55] =>  0:22
:END:
I18n for backup instructions :
- Please update po/POTFILES for all translatable files 
- A translator comment is noted as is :
  =# TRANSLATOR : This is a message for You=
- please use sprint function. Interpolation does not work.
**** run-parts work
- get_distant.d/
- add_local.d/
- add_distant.d/
- remove.d/
- remove_weekly.d/
- mask_pwd.d/
- stats.d/ called last to get all stats
  readme + stats: SLOC + $ + todosum + distant download
**** Compute ETA (Estimated Time of Arrival)
- Try using these datas ETA :
<Weekly>
  <Backup date>
  size + time
  <./Backup>
  ... other backup nodes
</Weekly>
... Same for Complete +
<Host name> ... 1 node par host
  <backup date>size + time</backup>
</Host>

- Same for :
- programmation/ directory copy (very long)
- call to remove.d
- report generation (Latex)
**** May implement unit tests
:LOGBOOK:
CLOCK: [2022-07-18 lun. 07:01]--[2022-07-18 lun. 07:45] =>  0:44
CLOCK: [2022-07-18 lun. 06:19]--[2022-07-18 lun. 06:38] =>  0:19
:END:
- Maybe give a try to Test::More and Test2::Suite
  see https://metacpan.org/pod/Test2::Tools::Basic
- [X] Add a check rule to the Makefile
- [ ] Must work again
  Subroutine refresh redefined at /usr/lib/perl5/
- [ ] Start with the Widget thing (refresh and force_refresh)
**** More Logger configuration work
- [ ] Maybe
  - LOGCf(msg) : pour configfile
  - LOGCl(msg) : pour commandline

- Logger->new()                               OK
- $conf = Common::Config->new()
- Parser::CommandLine->parse_before_configfile($conf)
   -c,--config-file <file> parsing
- Parser::ConfigFile->parse($conf)
   parse --config-file argument or search for available config files
- Parser::CommandLine->parse($conf)
- Logger->configure($conf)
   Open real file log
   Copy tmp file in real log file
   close and remove tmp file
- UserInterface::Mainwindow->new($conf)
   skin parsing
   widget creation
**** TODO Mainpage and pod work
:LOGBOOK:
CLOCK: [2022-07-18 lun. 04:06]--[2022-07-18 lun. 04:21] =>  0:15
:END:
     See template in doc/POD_TEMPLATE
     Remove NYI mark from manpage when implemented
     To, preview a pod-based documentation =perldoc -t file.pod=
- [ ] manpage : test in html with `make man2html'
  =rman -f html backup_prog.1 > backup_prog.1.html=
  **macro "" not recognized -- ignoring**
- Finally, texinfo : in BackupProg.texinfo
**** TODO Continue UserInterface classes implementation
:LOGBOOK:
CLOCK: [2022-08-04 jeu. 11:41]--[2022-08-04 jeu. 12:18] =>  0:37
CLOCK: [2022-08-04 jeu. 10:31]--[2022-08-04 jeu. 10:49] =>  0:18
:END:
- [X] The actual bug with widget label drawing si due to align property
  Center almost work while other values seems to fail
  - [X] Log x and y values
- [ ] Widget's draw_label and draw_border should become instance function
  Should shift $self
  - [ ] First draw_label
  - [ ] then, draw_border
- [ ] Follow *doc/SCREEN_LAYOUT* and create needed widgets.
  from MainWindow
- [ ] Continue to implement UI classes
  - [ ] WidgetList  
    refresh(): refresh() sur toutes les window
    force_refresh(): force_refresh() sur toutes les window
  - [ ] ElaspedTime inherits Window:x
    passer StatTime au constructeur
    gestion signal POSIX pour update interval
- See the label/border placement bug
- options hashmap should contains 
   color pair index for normal, pause, error, warning
- See the Back Color Erase (fix it with space chars)
**** DONE Make this old version work
:LOGBOOK:
CLOCK: [2022-08-04 jeu. 08:46]--[2022-08-04 jeu. 09:06] =>  0:20
CLOCK: [2022-08-03 mer. 10:09]--[2022-08-03 mer. 10:36] =>  0:27
CLOCK: [2022-08-02 mar. 10:14]--[2022-08-02 mar. 10:36] =>  0:22
CLOCK: [2022-07-29 ven. 08:51]--[2022-07-29 ven. 09:10] =>  0:19
CLOCK: [2022-07-28 jeu. 09:06]--[2022-07-28 jeu. 09:42] =>  0:36
CLOCK: [2022-07-27 mer. 09:35]--[2022-07-27 mer. 10:09] =>  0:34
CLOCK: [2022-07-18 lun. 04:01]--[2022-07-18 lun. 04:06] =>  0:05
CLOCK: [2022-07-18 lun. 03:26]--[2022-07-18 lun. 03:52] =>  0:26
CLOCK: [2022-07-14 jeu. 02:22]--[2022-07-14 jeu. 02:39] =>  0:17
CLOCK: [2022-07-14 jeu. 01:16]--[2022-07-14 jeu. 01:54] =>  0:38
CLOCK: [2022-07-12 mar. 01:46]--[2022-07-12 mar. 02:03] =>  0:17
:END:
     At least, fix easy to understand issues.
- [X] Argument " " isn't numeric in bitwise or (|) at BackupProg/UserInterface/Widget.pm
  Seems fixed but the application screen doesn't show anyway
- [X] Currently, UserInterface/MainWindow.pm tries to create a new widget but
  the label isn't drawn : FIXED. Was due to getch()
  see https://www.perl.com/article/197/2015/10/6/Display-real-time-data-with-Curses/
- [X] Must implement widget dirty flag, refresh and force_refresh  
- [X] Continue BackupProg/UserInterface/Widgets.pm implementation
   See the SCREEN.Layout file
- [X] label type printf + setTest
- [X] Gettext : see the problem with the __ shorthand
  Should be done with the Locale::TextDomain call. Now it wordks in
  MainWindow ctor
**** DONE Correctly handle doc/ directory a and TODO content
:LOGBOOK:
CLOCK: [2022-07-25 lun. 10:17]--[2022-07-25 lun. 10:49] =>  0:32
CLOCK: [2022-07-18 lun. 02:08]--[2022-07-18 lun. 02:28] =>  0:20
CLOCK: [2022-07-14 jeu. 05:10]--[2022-07-14 jeu. 05:38] =>  0:28
:END:
     Either add it to git or move it to README.md file.
- [ ] Must also move TODO content here
**** DONE Correct project setup
:LOGBOOK:
CLOCK: [2022-07-12 mar. 00:44]--[2022-07-12 mar. 00:51] =>  0:07
CLOCK: [2022-07-08 ven. 01:00]--[2022-07-08 ven. 01:18] =>  0:18
CLOCK: [2022-07-08 ven. 00:37]--[2022-07-08 ven. 00:52] =>  0:15
CLOCK: [2022-07-07 jeu. 23:58]--[2022-07-08 ven. 00:18] =>  0:20
:END:
- [X] Add a README.md file
- [X] Add a GPLv3 COPYING file  
- [X] Fix install rules
  Can't find /usr/local/lib/site_perl (and is not in @INC)
- [X] See if it still works in 2022
  - [X] Subroutine main::getchar redefined at ./backup_prog.pl line 24
    Fixed removing 'use POSIX' from main script
  - [X] Can't locate BackupProg/UserInterface/MainWindow.pm in @INC
    Maybe need to install. If yes, please explain that in README.md.
- [X] Undefined subroutine &main::setlocale called at backup_prog line 61
- [X] Can't install locale files
  Trying in /usr/share/locale/fr_FR/LC_MESSAGES//BackupProg.mo
  
